name: pull_request

on: [pull_request, workflow_dispatch]

jobs:
  eslint:
    name: Run TS Project eslint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [20.x, 22.x]

    steps:
      - name: Check out TS Project Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install TS Project dependencies
        run: npm ci

      - name: Run TS Project linters
        uses: wearerequired/lint-action@v2
        with:
          github_token: ${{ secrets.github_token }}
          # Enable linters
          eslint: true
          prettier: true
          eslint_extensions: ts,tsx

  # tests:
  #   name: Run Tests
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node: [20.x, 22.x]

  #   services:
  #     # Label used to access the service container
  #     postgres:
  #       # Docker Hub image
  #       image: postgres:14
  #       # Provide the password for postgres
  #       env:
  #         POSTGRES_PASSWORD: "postgres"
  #         POSTGRES_USER: postgres
  #         POSTGRES_DB: postgres
  #       ports:
  #         - 5432:5432
  #       # Set health checks to wait until postgres has started
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node }}
  #         cache: npm

  #     - name: Install TS Project dependencies
  #       run: npm ci

  #     - name: Run tests
  #       run: npm run test

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: Test Reporters ${{ matrix.node }}
  #         path: ./reports/**